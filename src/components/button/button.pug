mixin button(options)
  -
    let isRegister = options.isRegister;
    let isRegisterRus = options.isRegisterRus;
    let isLoginRus = options.isLoginRus;
    let isWithArrow = options.isWithArrow;
    let isTransparent = options.transparent;
    let isNoBorder = options.isNoBorder;
    let isSmall = options.isSmall;
    let buttonClass = 'button';
    buttonClass += isRegister == 'true' ? ' button_register' : '';
    buttonClass += isRegisterRus == 'true' ? ' button_register-rus' : '';
    buttonClass += isWithArrow == 'true' ? ' button_with-arrow' : '';
    buttonClass += isTransparent == 'true' ? ' button_transparent' : '';
    buttonClass += isNoBorder == 'true' ? ' button_with-no-border' : '';
    buttonClass += isSmall == 'true' ? ' button_small' : '';
    buttonClass += isLoginRus == 'true' ? ' button_login-rus' : '';
  button(class= buttonClass)
    span.button__label
      span.button__text= options.text
      case isWithArrow
        when 'true'
          span.button__arrow.material-icons arrow_forward


